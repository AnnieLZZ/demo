
思路很简单，肯定要大的数字在头，那么：
1 稍微观察样例会发现就是按字典序降序排序即可，将数字先转成字符串放到数组
2 但是不能想当然，感觉如此之后想想是否完全如此，仔细思考后发现并非完全按照字典序
排序，因为比如 321是比32长，所以会排在前面，但是32321显然大于32132，所以观察这个情况，需要在字符串前缀完全相同时比较 长字符串多出的第一位与短字符串的第一位比大小，返回1，
3 综上 按这个思路自定义一下cmp函数即可
#include <bits/stdc++.h>
using namespace std;
#define ull unsigned long long
bool cmp(string a,string b){
    if(a>=b){
        return 1;
    }
    else{//a>b
        int l1=a.length();
        int l2=b.length();
        string tmp;
        if(l1<l2){
            tmp=b.substr(0,l1);
            if(tmp!=a){
                return 0;
            }
            else{
                return  b[l1]<a[0];
            }
        }
        else{
            tmp=a.substr(0,l2);
            if(tmp!=b){
                return 0;
            }
            else{
                return a[l2]<b[0];
            }
        }


    }
}

int main() {
    int n;
    cin>>n;
    vector<string> ar(n);
    ull x;
    for(int i=0;i<n;i++){
        cin>>x;
        ar[i]= to_string(x);
    }
    sort(ar.begin(),ar.end(),cmp);
    for(auto &it:ar){
        cout<<it;
    }


    return 0;
}


